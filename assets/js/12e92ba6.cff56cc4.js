"use strict";(self.webpackChunkmindkey=self.webpackChunkmindkey||[]).push([[7777],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return t?i.createElement(h,c(c({ref:n},p),{},{components:t})):i.createElement(h,c({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[d]="string"==typeof e?e:a,c[1]=o;for(var s=2;s<r;s++)c[s]=t[s];return i.createElement.apply(null,c)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90801:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var i=t(87462),a=(t(67294),t(3905));const r={title:"API Client / JavaScript Wrapper for the Recruiting API",sidebar_label:"API Client / JavaScript Wrapper for the Recruiting API",id:"apiclient"},c=void 0,o={unversionedId:"recruiting/apiclient",id:"recruiting/apiclient",title:"API Client / JavaScript Wrapper for the Recruiting API",description:"The API Client is a JavaScript Wrapper for the Recruiting API. It provides a Promise-based wrapper that handles the communication with the recruiting API.",source:"@site/docs/recruiting/apiclient.md",sourceDirName:"recruiting",slug:"/recruiting/apiclient",permalink:"/docs/recruiting/apiclient",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/recruiting/apiclient.md",tags:[],version:"current",frontMatter:{title:"API Client / JavaScript Wrapper for the Recruiting API",sidebar_label:"API Client / JavaScript Wrapper for the Recruiting API",id:"apiclient"},sidebar:"recruitingSidebar",previous:{title:"MindKey Recruiting Web Integration",permalink:"/docs/recruiting/webintegration"},next:{title:"Web Components Integration",permalink:"/docs/recruiting/webcomponents"}},l={},s=[{value:"ECMAScript module version (recommended)",id:"ecmascript-module-version-recommended",level:2},{value:"Examples",id:"examples",level:3},{value:"Global Version",id:"global-version",level:2},{value:"Examples",id:"examples-1",level:3}],p={toc:s},d="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The API Client is a JavaScript Wrapper for the Recruiting API. It provides a Promise-based wrapper that handles the communication with the recruiting API."),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null,"You can include the API Client via a script tag in your application. The API Client offers two versions:"),(0,a.kt)("h2",{id:"ecmascript-module-version-recommended"},"ECMAScript module version (recommended)"),(0,a.kt)("p",null,"The file for the ECMAScript module version is available at: ",(0,a.kt)("a",{parentName:"p",href:"https://recruiting.mindkey.com/api-client/api-client-module.js"},"https://recruiting.mindkey.com/api-client/api-client-module.js"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The ECMAScript version is recommended, because it will run in isolation and does not interfere with any existing JavaScript on your website.website.\nPlease note that this version is only compatible with modern browsers (all current browsers except Internet Explorer). For the latest information on browser support, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://caniuse.com/es6-module"},"\u201cCan I use: JavaScript modules via script tag\u201d"),".")),(0,a.kt)("p",null,"According to the documentation, you can simply construct one of the clients and request data."),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { VacancyClient } from 'https://recruiting.mindkey.com/api-client/api-client-module.js';\n\nconst vacancyClient = new VacancyClient('https://recruiting.mindkey.com/api');\nconst vacancies = await vacancyClient.getVacancyList('<insert-your-customer-id-here>', 'en-US');\n\n")),(0,a.kt)("p",null,"Full Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Vacancies Table</title>\n  </head>\n  <body>\n    <table id=\"vacanciesTable\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n    </table>\n\n    <script type=\"module\">\n      import { VacancyClient } from 'https://recruiting.mindkey.com/api-client/api-client-module.js';\n\n      let vacancies = [];\n\n      // Function to populate the table\n      function populateTable() {\n        const table = document.getElementById('vacanciesTable');\n        const tbody = table.getElementsByTagName('tbody')[0];\n\n        // Clear existing table rows\n        tbody.innerHTML = '';\n\n        // Add new rows with data from vacancies array\n        vacancies.forEach(function (vacancy) {\n          const row = tbody.insertRow();\n\n          const idCell = row.insertCell();\n          idCell.appendChild(document.createTextNode(vacancy.id));\n\n          const descriptionCell = row.insertCell();\n          descriptionCell.appendChild(document.createTextNode(vacancy.description));\n        });\n      }\n\n      const vacancyClient = new VacancyClient('https://recruiting.mindkey.com/api');\n\n      async function fetchVacancies() {\n        try {\n          vacancies = await vacancyClient.getVacancyList('<insert-your-customer-id-here>', 'en-US');\n          populateTable();\n        } catch (error) {\n          console.error('Error fetching vacancies:', error);\n        }\n      }\n\n      // Call the fetchVacancies function to retrieve and populate the table with vacancies\n      fetchVacancies();\n    <\/script>\n  </body>\n</html>\n\n")),(0,a.kt)("h2",{id:"global-version"},"Global Version"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://recruiting.mindkey.com/api-client/api-client-global.js"><\/script>\n')),(0,a.kt)("p",null,"Almost works like the ","[ECMAScript module version]","(","Almost works like the ECMAScript module version but instead of constructing one of the clients directly, you can find them on window.mindkey.apiClient:), but instead of constructing one of the clients directly, you can find them on ",(0,a.kt)("inlineCode",{parentName:"p"},"window.mindkey.apiClient"),":"),(0,a.kt)("h3",{id:"examples-1"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const vacancyClient = new window.mindkey.apiClient.VacancyClient('https://recruiting.mindkey.com/api');\nconst vacancies = await vacancyClient.getVacancyList('<insert-your-customer-id-here>', 'en-US');\n")),(0,a.kt)("p",null,"Full Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Vacancies Table</title>\n    <script src=\"https://recruiting.mindkey.com/api-client/api-client-global.js\"><\/script>\n  </head>\n  <body>\n    <table id=\"vacanciesTable\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n    </table>\n\n    <script>\n      let vacancies = [];\n\n      // Function to populate the table\n      function populateTable() {\n        const table = document.getElementById('vacanciesTable');\n        const tbody = table.getElementsByTagName('tbody')[0];\n\n        // Clear existing table rows\n        tbody.innerHTML = '';\n\n        // Add new rows with data from vacancies array\n        vacancies.forEach(function (vacancy) {\n          const row = tbody.insertRow();\n\n          const idCell = row.insertCell();\n          idCell.appendChild(document.createTextNode(vacancy.id));\n\n          const descriptionCell = row.insertCell();\n          descriptionCell.appendChild(document.createTextNode(vacancy.description));\n        });\n      }\n\n      const vacancyClient = new window.mindkey.apiClient.VacancyClient('https://recruiting.mindkey.com/api');\n\n      async function fetchVacancies() {\n        try {\n          vacancies = await vacancyClient.getVacancyList('<insert-your-customer-id-here>', 'en-US');\n          populateTable();\n        } catch (error) {\n          console.error('Error fetching vacancies:', error);\n        }\n      }\n\n      // Call the fetchVacancies function to retrieve and populate the table with vacancies\n      fetchVacancies();\n    <\/script>\n  </body>\n</html>\n\n")))}u.isMDXComponent=!0}}]);